{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\new\\\\Frontend\\\\src\\\\components\\\\LoginPageMain.jsx\";\nimport React from 'react';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Typography, TextField, Card, Box, CardContent, Button, Divider } from \"@material-ui/core\";\nimport axios from 'axios';\nimport { API_LOGIN_URL, API_BASE_URL, EMAIL_PH_VALIDATION } from \"../constants/constant\";\n\nconst styles = () => ({\n  mainContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"fixed\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate( -50%, -50%)\",\n    width: \"99vw\",\n    height: \"99vh\",\n    background: \"#f1f2f5\"\n  },\n  cardRoot: {\n    borderRadius: \"10px\"\n  },\n  textFieldBox: {\n    margin: \"10px 0px\",\n    '& label.Mui-focused': {\n      color: 'green'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: '#008fb5'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& ::placeholder': {\n        fontWeight: \"500\"\n      },\n      '& fieldset': {\n        borderColor: 'lightgray'\n      },\n      '&:hover fieldset': {\n        borderColor: 'lightgray'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#008fb5'\n      }\n    }\n  },\n  btnText: {\n    textTransform: \"none\",\n    fontWeight: \"bold\"\n  },\n  btnStyle: {\n    background: \"#008fb5\",\n    minHeight: \"40px\",\n    '&:hover': {\n      backgroundColor: \"#0290b6\"\n    }\n  },\n  btnForget: {\n    color: \"#008fb5\",\n    margin: \"20px 0px\",\n    cursor: \"pointer\",\n    fontWeight: \"600\"\n  },\n  btnStyleCreate: {\n    background: \"#54b72e\",\n    minHeight: \"40px\",\n    '&:hover': {\n      backgroundColor: \"#56b432\"\n    }\n  },\n  btnCreateContainer: {\n    height: \"100px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n\nclass LoginPageMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mailId: \"\",\n      password: \"\",\n      snackbarContent: {\n        open: false,\n        message: \"\"\n      },\n      retrievePwd: false\n    };\n    this.fnLogIn = this.fnLogIn.bind(this);\n    this.fnForgotPwd = this.fnForgotPwd.bind(this);\n  }\n\n  fnLogIn() {\n    if (EMAIL_PH_VALIDATION.test(this.state.mailId)) {\n      let payload = {\n        email: this.state.mailId,\n        password: this.state.password\n      };\n      axios.post(API_LOGIN_URL, payload).then(res => {\n        alert(res.data.message);\n      }).catch(err => {\n        console.log(err);\n        alert(\"Network Error!\");\n      });\n    } else {\n      alert(\"Email Address / Phone number is not valid, Please provide a valid Email or phone number!\");\n    }\n  }\n\n  fnForgotPwd() {\n    if (EMAIL_PH_VALIDATION.test(this.state.mailId)) {\n      axios.put(API_BASE_URL + `${this.state.mailId}`).then(res => {\n        alert(res.data.message);\n        this.setState({\n          retrievePwd: false\n        });\n      }).catch(err => {\n        console.log(err);\n        alert(\"Network Error!\");\n      });\n    } else {\n      alert(\"Email Address / Phone number is not valid, Please provide a valid Email or phone number!\");\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mainContainer,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.cardRoot,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"username\",\n            variant: \"outlined\",\n            placeholder: \"Email address or phone number\",\n            fullWidth: true,\n            required: true,\n            type: \"email\",\n            label: \"\",\n            className: classes.textFieldBox,\n            value: this.state.mailId,\n            onChange: event => {\n              let mailId = this.state.mailId;\n              mailId = event.target.value;\n              this.setState({\n                mailId\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), this.state.retrievePwd ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              id: \"login\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              className: classes.btnStyle,\n              onClick: this.fnForgotPwd,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.btnText,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 25\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"password\",\n              variant: \"outlined\",\n              type: \"password\",\n              placeholder: \"Password\",\n              fullWidth: true,\n              required: true,\n              label: \"\",\n              className: classes.textFieldBox,\n              value: this.state.password,\n              onChange: event => {\n                let password = this.state.mailId;\n                password = event.target.value;\n                this.setState({\n                  password\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"login\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              className: classes.btnStyle,\n              onClick: this.fnLogIn,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.btnText,\n                children: \"Log In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.btnForget,\n              onClick: () => {\n                this.setState({\n                  mailId: \"\",\n                  retrievePwd: true\n                });\n              },\n              children: \"Forgotten password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.btnCreateContainer,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              id: \"create\",\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.btnStyleCreate,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.btnText,\n                children: \"Create New Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(LoginPageMain);","map":{"version":3,"sources":["D:/new/Frontend/src/components/LoginPageMain.jsx"],"names":["React","withStyles","Typography","TextField","Card","Box","CardContent","Button","Divider","axios","API_LOGIN_URL","API_BASE_URL","EMAIL_PH_VALIDATION","styles","mainContainer","display","alignItems","justifyContent","position","top","left","transform","width","height","background","cardRoot","borderRadius","textFieldBox","margin","color","borderBottomColor","fontWeight","borderColor","btnText","textTransform","btnStyle","minHeight","backgroundColor","btnForget","cursor","btnStyleCreate","btnCreateContainer","LoginPageMain","Component","constructor","props","state","mailId","password","snackbarContent","open","message","retrievePwd","fnLogIn","bind","fnForgotPwd","test","payload","email","post","then","res","alert","data","catch","err","console","log","put","setState","render","classes","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Typography,\r\n    TextField,\r\n    Card,\r\n    Box,\r\n    CardContent,\r\n    Button,\r\n    Divider\r\n  } from \"@material-ui/core\";\r\nimport axios from 'axios';\r\nimport { API_LOGIN_URL, API_BASE_URL, EMAIL_PH_VALIDATION } from \"../constants/constant\";\r\n\r\nconst styles = () => ({\r\n    mainContainer : {\r\n        display : \"flex\",\r\n        alignItems : \"center\",\r\n        justifyContent : \"center\",\r\n        position : \"fixed\",\r\n        top : \"50%\",\r\n        left : \"50%\",\r\n        transform : \"translate( -50%, -50%)\",\r\n        width : \"99vw\",\r\n        height : \"99vh\",\r\n        background : \"#f1f2f5\"\r\n    },\r\n    cardRoot : {\r\n        borderRadius : \"10px\"\r\n    },\r\n    textFieldBox : {\r\n        margin : \"10px 0px\",\r\n        '& label.Mui-focused': {\r\n            color: 'green',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: '#008fb5',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& ::placeholder' : {\r\n                fontWeight : \"500\"\r\n            },\r\n            '& fieldset': {\r\n                borderColor: 'lightgray',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'lightgray',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: '#008fb5',\r\n            }\r\n        }\r\n    },\r\n    btnText : {\r\n        textTransform : \"none\",\r\n        fontWeight : \"bold\"\r\n    },\r\n    btnStyle : {\r\n        background : \"#008fb5\",\r\n        minHeight : \"40px\",\r\n        '&:hover': {\r\n            backgroundColor : \"#0290b6\"\r\n        }\r\n    },\r\n    btnForget : {\r\n        color : \"#008fb5\",\r\n        margin : \"20px 0px\",\r\n        cursor : \"pointer\",\r\n        fontWeight : \"600\"\r\n    },\r\n    btnStyleCreate : {\r\n        background : \"#54b72e\",\r\n        minHeight : \"40px\",\r\n        '&:hover': {\r\n            backgroundColor : \"#56b432\"\r\n        }\r\n    },\r\n    btnCreateContainer : {\r\n        height : \"100px\",\r\n        display : \"flex\",\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\"\r\n    }\r\n  });\r\n  \r\nclass LoginPageMain extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mailId : \"\",\r\n            password : \"\",\r\n            snackbarContent : {\r\n                open : false,\r\n                message : \"\",\r\n            },\r\n            retrievePwd : false\r\n        }\r\n        this.fnLogIn = this.fnLogIn.bind(this);\r\n        this.fnForgotPwd = this.fnForgotPwd.bind(this);\r\n    }\r\n\r\n    fnLogIn() {\r\n        if(EMAIL_PH_VALIDATION.test(this.state.mailId)) {\r\n            let payload = {\r\n                email : this.state.mailId,\r\n                password : this.state.password\r\n            }\r\n            axios.post(\r\n                API_LOGIN_URL, \r\n                payload\r\n            )\r\n            .then( res => {\r\n                alert(res.data.message)\r\n            })\r\n            .catch( err => {\r\n                console.log(err)\r\n                alert(\"Network Error!\")\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Email Address / Phone number is not valid, Please provide a valid Email or phone number!\")\r\n        }\r\n    }\r\n\r\n    fnForgotPwd() {\r\n        if(EMAIL_PH_VALIDATION.test(this.state.mailId)) {\r\n            axios.put(\r\n                API_BASE_URL + `${this.state.mailId}`\r\n            )\r\n            .then( res => {\r\n                alert(res.data.message)\r\n                this.setState({retrievePwd : false})\r\n            })\r\n            .catch( err => {\r\n                console.log(err)\r\n                alert(\"Network Error!\")\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Email Address / Phone number is not valid, Please provide a valid Email or phone number!\")\r\n        }\r\n    }\r\n        \r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className = {classes.mainContainer}>\r\n               <Card className = {classes.cardRoot}>\r\n                    <CardContent>\r\n                        <TextField \r\n                            id=\"username\" \r\n                            variant=\"outlined\"\r\n                            placeholder = \"Email address or phone number\" \r\n                            fullWidth = {true}\r\n                            required = {true}\r\n                            type=\"email\"\r\n                            label = \"\"\r\n                            className = {classes.textFieldBox}\r\n                            value = {this.state.mailId}\r\n                            onChange={(event) =>\r\n                                {\r\n                                    let mailId = this.state.mailId;\r\n                                    mailId = event.target.value;\r\n                                    this.setState({mailId})\r\n                                }\r\n                            }\r\n                        />\r\n                        {this.state.retrievePwd ?\r\n                        <>\r\n                        <Button \r\n                            id=\"login\"\r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                            fullWidth = {true}\r\n                            className = {classes.btnStyle}\r\n                            onClick={this.fnForgotPwd}\r\n                        >\r\n                            <Typography className = {classes.btnText}>\r\n                                Send\r\n                            </Typography>\r\n                        </Button>\r\n                        </>\r\n                        : \r\n                        <>\r\n                        <TextField \r\n                            id=\"password\" \r\n                            variant=\"outlined\"\r\n                            type=\"password\"\r\n                            placeholder = \"Password\" \r\n                            fullWidth = {true}\r\n                            required = {true}\r\n                            label = \"\"\r\n                            className = {classes.textFieldBox}\r\n                            value = {this.state.password}\r\n                            onChange={(event) =>\r\n                                {\r\n                                    let password = this.state.mailId;\r\n                                    password = event.target.value;\r\n                                    this.setState({password})\r\n                                }\r\n                            }\r\n                        />\r\n                        <Button \r\n                            id=\"login\"\r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                            fullWidth = {true}\r\n                            className = {classes.btnStyle}\r\n                            onClick={this.fnLogIn}\r\n                        >\r\n                            <Typography className = {classes.btnText}>\r\n                                Log In\r\n                            </Typography>\r\n                        </Button>\r\n                            <Typography className = {classes.btnForget} onClick={() => {this.setState({mailId : \"\", retrievePwd : true})}}>\r\n                                    Forgotten password?\r\n                            </Typography>\r\n                        </>\r\n                        }\r\n                        <Divider />\r\n                        <Box className = {classes.btnCreateContainer}>\r\n                            <Button \r\n                                id=\"create\"\r\n                                variant=\"contained\" \r\n                                color=\"primary\"\r\n                                className = {classes.btnStyleCreate}\r\n                            >\r\n                                <Typography className = {classes.btnText}>\r\n                                    Create New Account\r\n                                </Typography>\r\n                            </Button>\r\n                        </Box>\r\n                    </CardContent>\r\n               </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(LoginPageMain);"]},"metadata":{},"sourceType":"module"}